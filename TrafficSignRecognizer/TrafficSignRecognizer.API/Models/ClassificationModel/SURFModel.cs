using Accord.Imaging;
using Accord.MachineLearning.VectorMachines;
using Accord.Statistics.Kernels;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Threading.Tasks;
using Accord.Imaging.Filters;

namespace TrafficSignRecognizer.API.Models.ClassificationModel
{
    public sealed class SURFModel
    {
        // Here we will store our support vector machine that will be
        // used to classify the feature vectors generated by the BoW.
        private MulticlassSupportVectorMachine<IKernel> _ksvm;
        private float _threshold;
        private int _octaves;
        private int _initial;
        private SpeededUpRobustFeaturesDetector _detector;

        public SURFModel(float threshold, int octaves, int initial)
        {
            _threshold = threshold;
            _octaves = octaves;
            _initial = initial;
        }

        public void Learn(Bitmap img)
        {
            var cascade = new Accord.Vision.Detection.Cascades.FaceHaarCascade();

            
        }
    }
}
