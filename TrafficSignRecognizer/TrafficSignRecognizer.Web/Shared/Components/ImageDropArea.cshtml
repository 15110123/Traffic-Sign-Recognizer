<LMTLocal>
    <style>
        .ImageDropArea {
            display: table;
            height: 25vh;
            width: 70vw;
            /*border: 4px dashed #707070;*/
            margin-top: 5px;
            margin-left: auto;
            margin-right: auto;
            background-image: repeating-linear-gradient(to right, #707070 0%, #707070 50%, transparent 0%, transparent 100%), repeating-linear-gradient(to right, #707070 0%, #707070 50%, transparent 0%, transparent 100%), repeating-linear-gradient(to bottom, #707070 0%, #707070 50%, transparent 0%, transparent 100%), repeating-linear-gradient(to bottom, #707070 0%, #707070 50%, transparent 0%, transparent 100%);
            background-position: left top, left bottom, left top, right top;
            background-repeat: repeat-x, repeat-x, repeat-y, repeat-y;
            background-size: 50px 3px, 50px 3px, 3px 50px, 3px 50px;
        }

            .ImageDropArea label {
                font-size: 30px;
                display: table-cell;
                vertical-align: middle;
                font-weight: lighter;
                text-align: center;
            }

            .ImageDropArea .DroppedImageContainer {
                display: table-cell;
                vertical-align: middle;
                margin-left: 5px;
                margin-right: 5px;
            }

                .ImageDropArea .DroppedImageContainer .DroppedImage {
                    width: 20vh;
                    height: 20vh;
                    display: inline-block;
                }
    </style>
    <LMTDropArea class="ImageDropArea" ondrop="@ImageDropHandler">
        @if (ListDropEventArgs.Count == 0)
        {
            <label>Kéo thả ảnh của bạn vào đây!</label>
        }
        else
        {
            <span class="DroppedImageContainer">
                @foreach (var e in ListDropEventArgs)
                {
                <img class="DroppedImage" src="@e.DataUrl" />
                }
            </span>
        }
    </LMTDropArea>
</LMTLocal>

@functions{
    [Parameter]
    private EventHandler<LMTDropEventArgs> ondrop { get; set; }

    public List<LMTDropEventArgs> ListDropEventArgs = new List<LMTDropEventArgs>();

    private void ImageDropHandler(LMTDropEventArgs e)
    {
        if (e.DataUrl == null) return;

        ListDropEventArgs.Add(e);

        ondrop?.Invoke(this, e);

        StateHasChanged();
    }
}
